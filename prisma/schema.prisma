// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id              String    @id
  email           String    @unique()
  hashed_password String
  sessions        Session[]
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt
  Liked           Liked[]
}

model Session {
  id        String   @id
  userId    String
  createdAt DateTime @default(now())
  expiresAt DateTime
  user      User     @relation(references: [id], fields: [userId], onDelete: Cascade)
}

model Artist {
  id          String   @id @unique
  name        String
  Track       Track[]  @relation("TrackArtist")
  picture_big String
  Album       Album[]
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Album {
  id           String   @id @unique
  title        String
  artist       Artist?  @relation(references: [id], fields: [artistId])
  artistId     String?
  cover_big    String
  cover_medium String
  cover_small  String
  Track        Track[]
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
}

model Track {
  id        String   @id @unique
  title     String
  artist    Artist?  @relation("TrackArtist", references: [id], fields: [artistId])
  artistId  String?
  album     Album?   @relation(references: [id], fields: [albumId])
  albumId   String?
  duration  Int
  preview   String?
  type      String
  Liked     Liked[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Liked {
  id        Int      @id @unique @default(autoincrement())
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId    String
  track     Track    @relation(fields: [trackId], references: [id])
  trackId   String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
